% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keyword_relevance.R
\name{keyword_relevance}
\alias{keyword_relevance}
\title{Watson Natural Language Understanding: Relevance of Keywords}
\usage{
keyword_relevance(username = NULL, password = NULL, input = NULL,
  input_type = NULL, limit = NULL, version = "?version=2018-03-16")
}
\arguments{
\item{username}{Authenitcation IBM Watson Natural-Language-Understanding-3j \strong{username}}

\item{password}{Authenitcation IBM Watson Natural-Language-Understanding-3j \strong{password}}

\item{input}{Either a text string input or website URL.
Either \code{text} or \code{url} argument has to be specified,
but not both.}

\item{input_type}{Specify what type of input was entered.
Either \code{text} or \code{url} argument has to be specified,
but not both.}

\item{limit}{The number of keywords to return.}

\item{version}{The release date of the API version to use. Default value is \code{version="?version=2018-03-16"}}
}
\value{
A dataframe containing a list of keywords and their corresponding likelihoods for the given input.
}
\description{
See the \href{https://github.com/johannesharmse/watsonNLU/blob/master/README.md}{sign-up} documentation for step by step instructions to secure your own username and password to enable you to use the Watson NLU API. The \strong{keyword_relevance} function takes in a username and password as input to authenticate the users computer to use the Watson Natural Language Understanding API. The user then enters the text input or URL of their choice, along with the input type. The function then returns a dataframe that contains keywords and their likelihood of being a keyword, from the given input. See the \href{https://github.com/johannesharmse/watsonNLU/blob/master/README.md}{keyword_relevance} documentation for more useage cases.
}
\examples{
# Find keywords and their corresponding likelihoods for a text input.
keyword_relevance(username = 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX', password= 'XXXXXXXXXXXX', input = 'This is a great API wrapper', input_type='text', limit = 10)

# Find keywords and their corresponding likelihoods for a URL input.
keyword_relevance(username = 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX', password= 'XXXXXXXXXXXX', input = 'http://santiago.begueria.es/2010/10/generating-spatially-correlated-random-fields-with-r/', input_type='url', limit = 10)

}
